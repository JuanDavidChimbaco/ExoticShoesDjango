-- MySQL Script generated by MySQL Workbench
-- Mon Jun 26 11:18:41 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tiendaexoticshoes
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tiendaexoticshoes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tiendaexoticshoes` DEFAULT CHARACTER SET utf8 ;
USE `tiendaexoticshoes` ;

-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`roles` (
  `idroles` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idroles`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`usuarios` (
  `id` INT NOT NULL COMMENT 'Llave primaria de la tabla Clientes. ',
  `nombre` VARCHAR(45) NULL COMMENT 'Nombre del Cliente.',
  `apellido` VARCHAR(45) NULL COMMENT 'Apellido del Cliente.',
  `Correo` VARCHAR(45) NULL COMMENT 'Correo del Cliente.',
  `contrase√±a` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL COMMENT 'Telefono del Cliente.',
  `FechaNacimiento` DATE NULL COMMENT 'Fecha de Nacimiento del Cliente.',
  `direccion` VARCHAR(45) NULL,
  `rol` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_roles_usuarios_idx` (`rol` ASC) VISIBLE,
  CONSTRAINT `fk_roles_usuarios`
    FOREIGN KEY (`rol`)
    REFERENCES `tiendaexoticshoes`.`roles` (`idroles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`Categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`Categorias` (
  `idCategoria` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idCategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`Productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`Productos` (
  `idProducto` INT NOT NULL COMMENT 'llave primaria de la tabla producto.',
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `precio` FLOAT NULL,
  `cantidadEnInventario` INT NULL,
  `categoria` INT NULL COMMENT 'llave foranea donde un los productos pertenecen a una categoria. ',
  PRIMARY KEY (`idProducto`),
  INDEX `CategoriasFk_idx` (`categoria` ASC) VISIBLE,
  CONSTRAINT `categoriaFK`
    FOREIGN KEY (`categoria`)
    REFERENCES `tiendaexoticshoes`.`Categorias` (`idCategoria`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`Pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`Pedidos` (
  `idPedido` INT NOT NULL COMMENT 'llave Primaria del pedido que va a realizar el cliente. o se puede entender como el mismo carrito. ',
  `fechaPedido` DATE NULL COMMENT 'Fecha la cual el cliente realiza el pedido.',
  `usuario` INT NULL COMMENT 'Llave foranea donde un cliente puede realizar uno o varios pedidos, pero un pedido pertenece solo a un cliente.\n',
  PRIMARY KEY (`idPedido`),
  INDEX `clienteFK_idx` (`usuario` ASC) VISIBLE,
  CONSTRAINT `clienteFK`
    FOREIGN KEY (`usuario`)
    REFERENCES `tiendaexoticshoes`.`usuarios` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`DetallePedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`DetallePedido` (
  `idDetallePedido` INT NOT NULL COMMENT 'llave primaria de la tabla detalle pedidos.',
  `pedido` INT NULL COMMENT 'llave foranea que relaciona el pedido que hace los clinetes con el detalle de cada pedido. \n',
  `producto` INT NULL COMMENT 'llave foranea un producto puede aparecer en uno o varios detalles de pedido. ',
  `cantidad` INT NULL,
  `subtotal` FLOAT NULL,
  PRIMARY KEY (`idDetallePedido`),
  INDEX `contiene_idx` (`pedido` ASC) VISIBLE,
  INDEX `aparece en_idx` (`producto` ASC) VISIBLE,
  CONSTRAINT `contiene`
    FOREIGN KEY (`pedido`)
    REFERENCES `tiendaexoticshoes`.`Pedidos` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `apareceEn`
    FOREIGN KEY (`producto`)
    REFERENCES `tiendaexoticshoes`.`Productos` (`idProducto`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`Pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`Pago` (
  `idPago` INT NOT NULL AUTO_INCREMENT,
  `metodo` ENUM("tarjeta", "contraEntrega", "PSE") NOT NULL,
  `monto` FLOAT NOT NULL,
  `fecha` DATETIME NOT NULL,
  `estado` ENUM('Pago', 'Pendiente') NULL,
  `pedidos` INT(11) NOT NULL,
  PRIMARY KEY (`idPago`),
  UNIQUE INDEX `idPago_UNIQUE` (`idPago` ASC) VISIBLE,
  INDEX `fk_Pago_Pedidos_idx` (`pedidos` ASC) VISIBLE,
  CONSTRAINT `fk_Pago_Pedidos`
    FOREIGN KEY (`pedidos`)
    REFERENCES `tiendaexoticshoes`.`Pedidos` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`Envio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`Envio` (
  `idEnvio` INT NOT NULL AUTO_INCREMENT,
  `servicioEnvio` VARCHAR(45) NOT NULL,
  `DireccionEnv` VARCHAR(45) NOT NULL,
  `fechaEnvio` DATETIME NOT NULL,
  `fechaEntrega` DATETIME NOT NULL,
  `estadoPago` INT(11) NULL,
  `estado` ENUM('Enviado', 'No Enviado') NULL,
  PRIMARY KEY (`idEnvio`),
  UNIQUE INDEX `idEnvio_UNIQUE` (`idEnvio` ASC) VISIBLE,
  INDEX `fk_envio_pago_idx` (`estadoPago` ASC) VISIBLE,
  CONSTRAINT `fk_envio_pago`
    FOREIGN KEY (`estadoPago`)
    REFERENCES `tiendaexoticshoes`.`Pago` (`idPago`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tiendaexoticshoes`.`devoluciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendaexoticshoes`.`devoluciones` (
  `idDevoluciones` INT NOT NULL AUTO_INCREMENT,
  `fechaDevolucion` DATETIME NULL,
  `motivo` VARCHAR(200) NOT NULL,
  `envio` INT(11) NULL,
  `productosDevueltos` VARCHAR(45) NULL,
  `cantidadDevuelta` INT NULL,
  `pago` INT NULL,
  PRIMARY KEY (`idDevoluciones`),
  INDEX `fk_pago_devolucion_idx` (`pago` ASC) VISIBLE,
  CONSTRAINT `fk_pago_devolucion`
    FOREIGN KEY (`pago`)
    REFERENCES `tiendaexoticshoes`.`Pago` (`idPago`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
